1
))
)
:
:!
exit
infpr
infor
main()
qplot(displ, hwy, data = mpg, facets =. ~ drv)
qplot(displ, hwy, data = mpg, facets =. ~ drv)
qplot(hwy, data = mpg, facets = drv ~ ., binwidth = 2)
qplot(displ, hwy, data =mpg, geom=c("point", smooth))
qplot(displ, hwy, data =mpg, geom =c("point", "smooth"), facets = .~drv)
g<- ggplot(mpg, displ, hwy)
?ggplot
ggplot(mpg, aes(displ, hwy))
g<- ggplot(mpg, aes(displ, hwy))
summary(g)
g+geom_point()
g+geom_point() + geom_smooth()
g+geom_point() + geom_smooth(args="lm")
g+geom_point() + geom_smooth(method="lm")
g+geom_point() + geom_smooth(method="lm") + facet_grid(.~drv)
g+geom_point() + geom_smooth(method="lm") + facet_grid(.~drv) +ggtitle("Swirl Rules!")
g+geom_point(color = "pink", size = 4, alpha =.5)
g+geom_point(aes(color = drv), size = 4, alpha =.5)
g+geom_point(aes(color = drv), labs(title = "Swirl Rules!"), labs = (x= "Displacement", y = "Hwy Mileage"))
g+geom_point(aes(color = drv), labs(title = "Swirl Rules!"), labs(x= "Displacement", y = "Hwy Mileage"))
g+geom_point(aes(color = drv), labs(title = "Swirl Rules!"))
g+geom_point(aes(color = drv))
g+geom_point(aes(color = drv) + labs(title= "Swirl Rules!") + labs(x= "Displacement", y = "Hwy Mileage"))
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy
| Mileage")
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy
| Mileage")
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy Mileage")
g + geom_point(aes(color = drv), size = 2, alpha =.5) + geom_smooth((size =4, linetype =3, method ="lm", se= FALSE))
g + geom_point(aes(color = drv), size = 2, alpha =.5) + geom_smooth(size =4, linetype =3, method ="lm", se= FALSE)
g + geom_point(aes(color = drv))+ theme_bw(base_family = "Times")
plot(myx,myy, type="l", ylim-=c(-3,3))
plot(myx,myy, type="l", ylim=c(-3,3))
g <- ggplot(tstdat, aes(x = myx, y = myy))
g <- ggplot(testdat, aes(x = myx, y = myy))
g+geom_line(0)
g+geom_line(g(0)
)
g+geom_line()
plot
g+geom_line()+ylim(-3,3)
g+geom_line()+ylim(-3,3)+coord_cartesian(ylim =c(-3,3))
g + geom_line() + coord_cartesian(ylim=c(-3,3))
g<- ggplot(mpg, aes(x = displ, y = hwy, color = factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)+ geom_smooth(method="lm", se= FALSE, size = 2, color = "black")
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)+ geom_smooth(method="lm", se= FALSE, size = 2, color = "black") + labs(x= "Displacement", y = "Highway Mileage", title = "Swirl Rules!")
str(diamonds)
qplot(price, data = diamonds)
range(diamonds$price)
qplot(price, data = diamonds,binwidth =18497/30 )
brk
counts
qplot(price, data = diamonds,binwidth =18497/30 , fill = cut)
qplot(price, data = diamonds, geom = "density")
qplot(price, data = diamonds, geom = "density", color = cut)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds, shape = cut)
qplot(carat, price, data = diamonds, shape = cut, color = cut)
qplot(carat,price,data=diamonds, color=cut)
qplot(carat,price,data=diamonds, color=cut, geom_smooth(method ="lm")
)
qplot(carat,price,data=diamonds, color=cut)+ geom_smooth(method ="lm")
qplot(carat,price,data=diamonds, color=cut, facet = .~cut)+ geom_smooth(method ="lm")
qplot(carat,price,data=diamonds, color=cut, facets=.~cut) + geom_smooth(method="lm")
g<- ggplot(diamonds, aes(depth, price))
summary(g)
g+ geom_point(alpha = 1/3)
cutpoints <- quantile(diamonds$carat, seq(0,1, length = 4), na.rm = TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g<- ggplot(diamonds, aes(depth,price))
g+ geom_points(alpha = 1/3) + facet_grid(cut~car2)
g+ geom_point(alpha = 1/3) + facet_grid(cut~car2)
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+ geom_smooth(method = "lm", size = 3), color = "pink"
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+ geom_smooth(method = "lm", size = 3, color = "pink")
ggplot(diamonds, aes(carat, price))+ geom_boxplot()+facet_grid(.~cut)
bye()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
library(swirl)
swirl()
dist()
dist(dataFrame)
hclust(distxy)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h = 1.5, col = "blue")
abline(v = 4, col = "red")
abline(h= .4, col = "red")
4
1
0
4
3
5
abline(h=.05)
12
abline(h= 0.05, color = "green")
dist(dfm)
dist(dFsm)
hc
heatmpa(dataMatrix, col = cm.colors(25))
heatmap(dataMatrix, col = cm.colors(25))
heatmap(mt)
mt
denmt
plot(demnt)
plot(denmt)
distmt
cmay
cmat
points(cx, cy, col = c("red","orange","purple"), pch = 3, cex = 2, lwd = 2)
mdist(cx,cy)
mdist(x,y,cx,cy)
apply(distTmp, 2, which.min)
points(x,y, pch =19, cex = 2, col = cols[newClust])
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col = cols1, pch =8, cex =2, lwd =2)
mdist(x,y, newCx, newCy)
apply(distTmp2, 2, which.min)
points(x, y , pch =19, cex =2, col= cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col = cols1, pch = 9, cex =2, lwd =2)
kmeans(dataFrame, centers= 3)
mObj$iter
kmObj$iter
points(x, y, col = kmObj$cluster, pch = 19, cex =2)
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers, col = c("black", "red","green"), pch = 3, cex =3, lwd = 3)
plot(x,y, col = kmeans(dataFrame,6)$cluster, pch =19, cex = 2)
plot(x,y, col = kmeans(dataFrame,6)$cluster, pch =19, cex = 2)
plot(x,y, col = kmeans(dataFrame,6)$cluster, pch =19, cex = 2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local= TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu * t*matv
matu %*% t(matv)
matu %*% diag %*% t(matv)
svd(mat)
svd(scale(mat))
scale(mat)
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2
svd2$v[,1:2]
svd2$d
dim(faceData)
(svd1$u[,1] and svd1$d[1]
(svd1$u[,1], svd1$d[1])
a1<- svd1$u[,1]
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1]) OR a1 <- svd1$u[,1] %*% t(svd1$v[,1]) *
| svd1$d[1]
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1]) OR a1 <- svd1$u[,1] %*% t(svd1$v[,1]) * svd1$d[1]
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- (svd1$u[1:2] * svd1$d[1]) %*% t(svd1$v[,1])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a2 <- myImage(2,5)
a2 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd$562, ssd$563)
names(ssd$562)
names(ssd)
names(ssd[562:563])
table(ssd$subject)
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1<- subset(ssd, subject ==1)
dim(sub1)
names(sub1[1:12,])
names(sub1[1:12])
myedit("showXY.R")
showMe(1:6)
mdist<- mdist(x[,1:3])
mdist<- mdist(sub1[,1:3])
mdist(sub1[,1:3])
mdist<- dist(sub1[,1:3])
hclust(mdist)
hclustering <- hclust(mdist
)
myplclust(hclustering,lab.col= unclass(sub1$activity))
mdist(sub1[,10:12])
mdist<- dist(sub1[,10:12])
hclustering<- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1<- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(sd1$v)
maxCon <- which.max(svd1$v)
maxCon <- which.max(svd1$v[,2])
mdist<- dist(c(sub1[,10:12], maxCon))
mdist<- dist(sub1[,10:12], maxCon)
mdist<- dist(sub1[,10:12])
mdist <- dist(sub1[,c(10:12,maxCon)]
)
hclustering<- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- asf
kClust <- kmeans(sub1, center = 6)
kClust <- kmeans(sub1[,c(10:12,maxCon)], center = 6)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
table(kClust$cluster,sub1$activity )
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6, nstart = 100)
table(kClust$cluster,sub1$activity )
dim(kClust$centers)
laying <- kClust$size==29.
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12], pch = 19, ylab = "Laying Cluster")
names(sub1[1:3,])
names(sub1[,1:3])
walkdown<- which(kClust$size == 49)
plot(kClust$centers[walkdown,1:12], pch = 19, ylab = "Walkdown Cluster")
dim(pm0)
head(pm0)
cnames
strsplit(cnames, "|", fixed = TRUE)
cnames<-strsplit(cnames, "|", fixed = TRUE)
cnames
make.names(cnaes[[1]][wcol])
make.names(cnames[[1]][wcol])
names(pm0) <- make.names(cnames[[1]][wcol])
names(pm0)
head(pm0)
x0<- pm0$Sample.Value
str(x0)
is.na(x0)
mean(is.na(x0))
names(pm1)<- make.names(cnames[[1]][wcol])
dim(pm1)
x1<- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
x1<0
negative <- x1 <0
sum(negative, na.rm = TRUE)
mean(negative, na.rm= TRUE)
dates<- pm1$Date
str(dates)
dates<- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative], "month")
str(site0)
both <- intersect(site0, site1)
both
head(pm0)
cnt0<- subset(pm0, State.Code == 36, county.site %in% both)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub<- subset(cnt0, County.Code == 63 & Site.ID ==2008)
pm1sub<- subset(cnt1, County.Code == 63 & Site.ID ==2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0<- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1<- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow = c(1,2), mar = c(4,4,2,1))
plot(dates0, x0sub, pch = 20)
abline(h = median(pm25))
abline(h = median(x0sub, na.rm= TRUE))
abline(h = median(x0sub, na.rm= TRUE), lwd=2)
plot(dates1, x1sub, pch = 20)
abline(h = median(x1sub, na.rm= TRUE), lwd=2)
rng <- range(x0sub, x1sub, na.rm = TRUE)
rng
mn0 <- call(pm0, tapply(Sample.Value, State.Code, mean, na.rm= TRUE))
mn0 <- vector(pm0, tapply(Sample.Value, State.Code, mean, na.rm= TRUE))
mn0(pm0, tapply(Sample.Value, State.Code, mean, na.rm= TRUE))
mn0<- tapply(Sample.Value, State.Code, mean, na.rm= TRUE))
mn0<- tapply(Sample.Value, State.Code, mean, na.rm= TRUE)
mn0<- tapply(pm0$Sample.Value, pm0$State.Code, mean, na.rm= TRUE)
mn0 <- with(pm0,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn0)
mn1 <- with(pm1,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state = names(mn0), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn1)
mrg <- merge(d0,d1,equal = "state")
mrg <- merge(d0,d1, by = "state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1,52), mrg[,2], xlim = c(.5,2.5))
)
with(mrg, plot(rep(2,52), mrg[,3], xlim = c(.5,2.5))
)
with(mrg, points(rep(2, 52), mrg[, 3]))
with(mrg, points(rep(4,2), mrg[, 4]))
with(mrg, points(rep(2, 52), mrg[, 3]))
segments(rep(1, 52), mrg[, 2], rep(2, 52), mrg[, 3])
mrg[mrg$mean.x <
| mrg$mean.y, ]
mrg[mrg$mean.x < mrg$mean.y, ]
rm(list=ls())
getwd()
setwd("./Documents/datasciencecoursera/ExploratoryDataAnalysis/Project/Project2/")
library("data.table")
data <- fread("data/Source_Classification_Code.rds")
data <- fread("data/Source_Classification_Code.rds", sep="/")
SCC <- data.table::as.data.table(x = readRDS(file = "Source_Classification_Code.rds"))
SCC <- data.table::as.data.table(x = readRDS(file = "data/Source_Classification_Code.rds"))
source_class <- data.table::as.data.table(x = readRDS(file = "data/Source_Classification_Code.rds"))
summary_data <- data.table::as.data.table(x = readRDS(file = "data/summarySCC_PM25.rds"))
totalNEI <- NEI[, lapply(.SD, sum, na.rm = TRUE), .SDcols = c("Emissions"), by = year]
summary_data <- summary_data[, lapply(.SD, sum, na.rm = TRUE), .SDcols = c("Emissions"), by = year]
barplot(summary_data[, Emissions]
, names = summary_data[, year]
, xlab = "Years", ylab = "Emissions"
, main = "Emissions over the Years")
rm(list=ls())
source_class <- data.table::as.data.table(x = readRDS(file = "data/Source_Classification_Code.rds"))
summary_data <- data.table::as.data.table(x = readRDS(file = "data/summarySCC_PM25.rds"))
summary_data <- summary_data[, lapply(.SD, sum, na.rm = TRUE), .SDcols = c("Emissions"), by = year]
barplot(summary_data[, Emissions]
, names = summary_data[, year]
, xlab = "Years", ylab = "Emissions"
, main = "Emissions over the Years")
summary_data[, Emissions := lapply(.SD, as.numeric), .SDcols = c("Emissions")]
barplot(summary_data[, Emissions]
, names = summary_data[, year]
, xlab = "Years", ylab = "Emissions"
, main = "Emissions over the Years")
rm(list=ls())
source_class <- data.table::as.data.table(x = readRDS(file = "data/Source_Classification_Code.rds"))
summary_data <- data.table::as.data.table(x = readRDS(file = "data/summarySCC_PM25.rds"))
# Prevents histogram from printing in scientific notation
summary_data[, Emissions := lapply(.SD, as.numeric), .SDcols = c("Emissions")]
summary_data <- summary_data[, lapply(.SD, sum, na.rm = TRUE), .SDcols = c("Emissions"), by = year]
barplot(summary_data[, Emissions]
, names = summary_data[, year]
, xlab = "Years", ylab = "Emissions"
, main = "Emissions over the Years")
rm(list=ls())
library("data.table")
SCC <- data.table::as.data.table(x = readRDS(file = "data/Source_Classification_Code.rds"))
NEI <- data.table::as.data.table(x = readRDS(file = "data/summarySCC_PM25.rds"))
# Prevents histogram from printing in scientific notation
NEI[, Emissions := lapply(.SD, as.numeric), .SDcols = c("Emissions")]
totalNEI <- NEI[, lapply(.SD, sum, na.rm = TRUE), .SDcols = c("Emissions"), by = year]
barplot(totalNEI[, Emissions]
, names = totalNEI[, year]
, xlab = "Years", ylab = "Emissions"
, main = "Emissions over the Years")
library("data.table")
SCC <- data.table::as.data.table(x = readRDS(file = "data/Source_Classification_Code.rds"))
NEI <- data.table::as.data.table(x = readRDS(file = "data/summarySCC_PM25.rds"))
# Prevents histogram from printing in scientific notation
NEI[, Emissions := lapply(.SD, as.numeric), .SDcols = c("Emissions")]
totalNEI <- NEI[, lapply(.SD, sum, na.rm = TRUE), .SDcols = c("Emissions"), by = year]
png(filename='plot1.png')
barplot(totalNEI[, Emissions]
, names = totalNEI[, year]
, xlab = "Years", ylab = "Emissions"
, main = "Emissions over the Years")
dev.off()
path <- getwd()
download.file(url = "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
, destfile = paste(path, "dataFiles.zip", sep = "/"))
unzip(zipfile = "dataFiles.zip")
SCC <- data.table::as.data.table(x = readRDS(file = "Source_Classification_Code.rds"))
NEI <- data.table::as.data.table(x = readRDS(file = "summarySCC_PM25.rds"))
# Prevents histogram from printing in scientific notation
NEI[, Emissions := lapply(.SD, as.numeric), .SDcols = c("Emissions")]
totalNEI <- NEI[, lapply(.SD, sum, na.rm = TRUE), .SDcols = c("Emissions"), by = year]
png(filename='plot1_a.png')
barplot(totalNEI[, Emissions]
, names = totalNEI[, year]
, xlab = "Years", ylab = "Emissions"
, main = "Emissions over the Years")
dev.off()
library("data.table")
summary_scc <- data.table::as.data.table(x = readRDS(file = "data/summarySCC_PM25.rds"))
summary_scc[, Emissions := lapply(.SD, as.numeric), .SDcols = c("Emissions")]
summary_scc <- summary_scc[, lapply(.SD, sum, na.rm = TRUE), .SDcols = c("Emissions"), by = year]
png(filename='plot1.png')
barplot(summary_scc[, Emissions]
, names = summary_scc[, year]
, xlab = "Years", ylab = "Emissions"
, main = "Emissions over the Years")
dev.off()
summary_scc <- data.table::as.data.table(x = readRDS(file = "data/summarySCC_PM25.rds"))
summary_scc[, Emissions := lapply(.SD, as.numeric), .SDcols = c("Emissions")]
summary_scc <- summary_scc[fips=='24510',
lapply(.SD, sum, na.rm = TRUE),
.SDcols = c("Emissions"),
by = year]
png(filename='plot2.png')
barplot(summary_scc[, Emissions]
, names = summary_scc[, year]
, xlab = "Years", ylab = "Emissions"
, main = "Emissions over the Years")
dev.off()
library("data.table")
summary_scc <- data.table::as.data.table(x = readRDS(file = "data/summarySCC_PM25.rds"))
baltimore_summary <- summary_scc[fips=='24510',]
png(filename='plot3.png')
ggplot(baltimore_summary,
aes(factor(year),
Emissions,fill=type)) +
geom_bar(stat="identity") +
theme_bw() + guides(fill=FALSE)+
facet_grid(.~type,scales = "free",space="free") +
labs(x="year",
y=expression("Total PM"[2.5]*" Emission (Tons)")) +
labs(title=expression("PM"[2.5]*" Emissions, Baltimore City 1999-2008 by Source Type"))
dev.off()
library("data.table")
library("ggplot2")
summary_scc <- data.table::as.data.table(x = readRDS(file = "data/summarySCC_PM25.rds"))
source_data <- data.table::as.data.table(x = readRDS(file = "data/Source_Classification_Code.rds"))
# Subset data
combustion <- grepl("comb", source_data[, SCC.Level.One], ignore.case=TRUE)
coal <- grepl("coal", source_data[, SCC.Level.Four], ignore.case=TRUE)
combustion_source <- source_data[combustion & coal, SCC]
combustion_summary <- summary_scc[summary_scc[,SCC] %in% combustion_source]
png("plot4.png")
ggplot(combustion_summary,
aes(x = factor(year),
y = Emissions/10^5)) +
geom_bar(stat="identity", fill ="#FF9999", width=0.75) +
labs(x="year", y=expression("Total PM"[2.5]*" Emission (10^5 Tons)")) +
labs(title=expression("PM"[2.5]*" Coal Combustion Source Emissions Across US from 1999-2008"))
dev.off()
# plot 5 - How have emissions from motor vehicle sources changed from 1999–2008 in Baltimore City?
library("data.table")
library("ggplot2")
summary_scc <- data.table::as.data.table(x = readRDS(file = "data/summarySCC_PM25.rds"))
scc <- data.table::as.data.table(x = readRDS(file = "data/Source_Classification_Code.rds"))
# subset of the source_data on vehicles
condition <- grepl("vehicle", scc[, SCC.Level.Two], ignore.case=TRUE)
vehicles_scc <- scc[condition, SCC]
vehicles_summary <- summary_scc[summary_scc[, SCC] %in% vehicles_scc,]
# Subset the vehicles NEI data to Baltimore's fip
baltimore_veh_summary <- vehicles_summary[fips=="24510",]
png("plot5.png")
ggplot(baltimore_veh_summary,
aes(factor(year),
Emissions)) +
geom_bar(stat="identity",
fill ="#FF9999",
width=0.75) +
labs(x="year", y=expression("Total PM"[2.5]*" Emission (10^5 Tons)")) +
labs(title=expression("PM"[2.5]*" Motor Vehicle Source Emissions in Baltimore from 1999-2008"))
dev.off()
# plot 6 - Compare emissions from motor vehicle sources in Baltimore City with emissions from motor
## vehicle sources in Los Angeles County, California (𝚏𝚒𝚙𝚜 == "𝟶𝟼𝟶𝟹𝟽"). Which city has seen greater
## changes over time in motor vehicle emissions?
library("data.table")
library("ggplot2")
summary_scc <- data.table::as.data.table(x = readRDS(file = "data/summarySCC_PM25.rds"))
scc <- data.table::as.data.table(x = readRDS(file = "data/Source_Classification_Code.rds"))
# subset of the source_data on vehicles
condition <- grepl("vehicle", scc[, SCC.Level.Two], ignore.case=TRUE)
vehicles_scc <- scc[condition, SCC]
vehicles_summary <- summary_scc[summary_scc[, SCC] %in% vehicles_scc,]
# Subset the vehicles NEI data to Baltimore's fip
baltimore_veh_summary <- vehicles_summary[fips=="24510",]
baltimore_veh_summary[, city := c("Baltimore City")]
# Subset the vehicles NEI data to LA's fip
vehiclesLA_summary <- vehicles_summary[fips == "06037",]
vehiclesLA_summary[, city := c("Los Angeles")]
# Combine data.tables into one data.table
both <- rbind(baltimore_veh_summary,vehiclesLA_summary)
png("plot6.png")
ggplot(both,
aes(x=factor(year),
y=Emissions,
fill=city)) +
geom_bar(aes(fill=year),
stat="identity") +
facet_grid(scales="free",
space="free",
.~city) +
labs(x="year",
y=expression("Total PM"[2.5]*" Emission (Kilo-Tons)")) +
labs(title=expression("PM"[2.5]*" Motor Vehicle Source Emissions in Baltimore & LA, 1999-2008"))
dev.off()
