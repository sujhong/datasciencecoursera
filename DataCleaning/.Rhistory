source('~/.active-rstudio-document')
library ()
search()
install.packages("MASS")
require(MASS)
detach("package:MASS", unload=TRUE)
library("MASS", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
1
pi
z =1
z <-1
z <- 4
z+c
class(x)
class (z)
is.numeric(z)
as.character(z)
z
z+a
is.numeric(z)
is.numeric(as.character((z)))
getwd()
dir <- getwd()
dir
rm(a)
ls()
rm(list = ls())
?rm
?sqrt
help(rm)
??remove
help.start()
example(rm)
help (min)
examples( min)
min (5:1, pi)
min (5:2)
min (pi)
min (5, 2, pi)
help ("pmin")
pmin (5:1, pi)
5:1
5:2
6:1
c (1:3)
c(1)
c(2,1)
c
c(5:9)
c(1)
set <- c(5:10)
set [c(1,3)]
set (1)
set [1]
install.packages("KernSmooth")
library(KernSmooth)
clear
clear;
l
clear
setwd('/Users/sujinhong/Documents/datasciencecoursera/DataCleaning')
t1 <- read.csv('t1.csv',
skip = 4,
nrow= 190)
names(t1)<- c('CountryCode','Rank','', 'Economy','GDP_Total')
t2 <- read.csv('t2.csv')
t1<- t1%>% select(CountryCode,Rank,Economy,GDP_Total)
library(dplyr)
t1<- t1%>% select(CountryCode,Rank,Economy,GDP_Total)
colnames(t1)
library(data.table)
remove.packages(data.table)
remove.packages("data.table")
install.packages("data.table")
install.packages("data.table")
getwd
getwd()
library(data.table)
library(dplyr)
t1 <- read.table('t1.csv',
skip = 4,
nrows = 190,
select = c(1,2,4,5),
col.names = c("CountryCode", "Rank","CountryName","GDP_Total")
)
t1 <- fread('t1.csv',
skip = 4,
nrows = 190,
select = c(1,2,4,5),
col.names = c("CountryCode", "Rank","CountryName","GDP_Total")
)
t1
t2 <- fread('t2.csv')
mergedf<- merge(t1,t2, by = "CountryCode")
nrow(mergedf)
dim(t1)
dim(t2)
unique_t1 <- t1 %>% select(CountryCode)
unique_t1 <- t1 %>% select(CountryCode) %>% unique()
unique_t2 <- t2 %>% select(CountryCode) %>% unique()
dim(unique_t1)
dim(unique_t2)
merge(t1,t2, by = "CountryCode")
test <- merge(t1,t2, by = "CountryCode")
dim(test)
t1
t1 <- fread('t1.csv',
skip = 4,
nrows = 191,
select = c(1,2,4,5),
col.names = c("CountryCode", "Rank","CountryName","GDP_Total")
)
dim(t1)
unique_t1 <- t1 %>% select(CountryCode) %>% unique()
dim(unique_t1)
tail(unique_t1,2)
head(CountryCode)
head(t1)
t1 <- fread('t1.csv',
skip = 5,
nrows = 191,
select = c(1,2,4,5),
col.names = c("CountryCode", "Rank","CountryName","GDP_Total")
)
dim(t1)
head(t1)
unique_t1 <- t1 %>% select(CountryCode) %>% unique()
unique_t2 <- t2 %>% select(CountryCode) %>% unique()
test <- merge(t1,t2, by = "CountryCode")
dim(test)
arranged_df <- mergedf %>% arrange(desc(CountryCode))
arranged_df[13,]
arranged_df <- mergedf %>% arrange(desc(GDP_Total))
arranged_df[13,]
arranged_df <- mergedf %>% arrange(desc(Rank))
arranged_df[13,]
arranged_df
t1 <- fread('t1.csv',
skip = 5,
#nrows = 19,
select = c(1,2,4,5),
col.names = c("CountryCode", "Rank","CountryName","GDP_Total")
)
mergedf<- merge(t1,t2, by = "CountryCode")
nrow(mergedf)
t1 <- fread('t1.csv',
skip = 5,
nrows = 236,
select = c(1,2,4,5),
col.names = c("CountryCode", "Rank","CountryName","GDP_Total")
)
mergedf<- merge(t1,t2, by = "CountryCode")
nrow(mergedf)
mergedf<- inner_join(t1,t2, by = "CountryCode")
nrow(mergedf)
t1 <- fread('t1.csv',
skip = 5,
nrows = 195,
select = c(1,2,4,5),
col.names = c("CountryCode", "Rank","CountryName","GDP_Total")
)
mergedf<- inner_join(t1,t2, by = "CountryCode")
nrow(mergedf)
t1 <- fread('t1.csv',
skip = 5,
nrows = 195,
select = c(1,2,4,5),
col.names = c("CountryCode", "Rank","CountryName","GDP_Total")
)
tail(t1, 10)
t1 <- fread('t1.csv',
skip = 5,
nrows = 190,
select = c(1,2,4,5),
col.names = c("CountryCode", "Rank","CountryName","GDP_Total")
)
tail(t1, 10)
mergedf<- inner_join(t1,t2, by = "CountryCode")
nrow(mergedf)
arranged_df <- mergedf %>% arrange(desc(Rank))
tail(arranged_df, 10)
head(arranged_df,15)
avg <- sapply(arranged_df, mean)
avg
high_income <- arranged_df %>% filter (`Income Group`=='High income: OECD')
avg_rank_HI <- mean(high_income$Rank, na.rm = TRUE)
avg_rank_HI
high_income_non <- arranged_df %>% filter (`Income Group`=='High income: nonOECD')
avg_rank_HI_non <- mean(high_income_non$Rank, na.rm = TRUE)
avg_rank_HI_non
rm(arranged_df)
rm(high_income)
rm(*)
?rm
rm(list=ls())
